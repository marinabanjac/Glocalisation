import openai
import pandas as pd
import time
import os

# ‚úÖ 1. Postavi API kljuƒç
api_key = "xxxxxxxxxxxxxxxxxxxxxxxx"  # Zameni sa svojim API kljuƒçem
client = openai.OpenAI(api_key=api_key)

# ‚úÖ 2. Uƒçitaj CSV fajl sa grupisanim imenicama
file_path = "D:/Python/PythonProjects/stanza filtering abstracts/primary filtering into N, ADJ, X, PROPN/2021/grouped_nouns.csv"

print("üîπ Poku≈°avam da uƒçitam fajl...")
df = pd.read_csv(file_path)

# ‚úÖ 3. Ukloni duplikate iz kolone "lemma"
lemmas = df["lemma"].drop_duplicates().tolist()
print(f"‚úÖ Uƒçitano {len(lemmas)} unikatnih lema.")

# ‚úÖ 4. Pode≈°avanje batch-ova i output fajla
batch_size = 10  # üî• SADA KORISTIMO BATCH OD 10 REƒåI
output_file = "anglicisms_analysis1.csv"

# ‚úÖ 5. Ako CSV ne postoji, kreiraj prazan fajl sa zaglavljem
if not os.path.exists(output_file):
    print(f"üîπ Fajl {output_file} ne postoji, kreiram ga sada...")
    df_empty = pd.DataFrame(columns=["Lemma", "IsAnglicism", "EnglishWord", "Probability", "Etymology"])
    df_empty.to_csv(output_file, mode='w', index=False, encoding="utf-8")
    print("‚úÖ Fajl uspe≈°no kreiran!")

# ‚úÖ 6. Uƒçitaj veƒá analizirane reƒçi
df_existing = pd.read_csv(output_file)
analyzed_lemmas = set(df_existing["Lemma"].tolist())
print(f"‚úÖ Veƒá analizirano {len(analyzed_lemmas)} reƒçi.")

# ‚úÖ 7. Filtriraj samo reƒçi koje nisu analizirane
new_lemmas = [lemma for lemma in lemmas if lemma not in analyzed_lemmas]
print(f"‚úÖ Ukupno novih reƒçi za analizu: {len(new_lemmas)}")

# üõë Ako nema novih reƒçi, zavr≈°i program
if len(new_lemmas) == 0:
    print("‚úÖ Nema novih reƒçi za analizu. Program zavr≈°ava rad.")
    exit()

# ‚úÖ 8. Funkcija za analizu batch-a
def analyze_lemmas_batch(lemmas):
    results = []

    for lemma in lemmas:
        print(f"üîπ Analiziram reƒç: {lemma}")

        prompt = f"""
        Odgovori kratko na sledeƒáa pitanja o srpskoj imenici "{lemma}":

        1. Da li je anglicizam? Odgovori sa: "Da", "Mo≈æda" ili "Ne".
           (Da: >70%, Mo≈æda: 30-70%, Ne: <30%)
        2. Ako je anglicizam ili mo≈æda anglicizam, iz koje engleske reƒçi dolazi?
        3. Koliko je verovatno da je anglicizam (0-100%)?
        4. Etimologija u maksimalno 10 reƒçi (npr. "iz latinskog, preko engleskog").
        """

        try:
            response = client.chat.completions.create(
                model="gpt-4-turbo",
                messages=[{"role": "user", "content": prompt}],
                temperature=0.7
            )

            result_text = response.choices[0].message.content
            print(f"‚úÖ API odgovor za '{lemma}': {result_text[:100]}...")  # Prikazuje prvih 100 karaktera odgovora

            # Parsiranje podataka iz odgovora
            lines = result_text.split("\n")
            is_anglicism = lines[0].split(":")[-1].strip() if len(lines) > 0 else "Gre≈°ka"
            english_word = lines[1].split(":")[-1].strip() if len(lines) > 1 else "N/A"
            probability = lines[2].split(":")[-1].strip() if len(lines) > 2 else "N/A"
            etymology = lines[3].split(":")[-1].strip() if len(lines) > 3 else "N/A"

            results.append((lemma, is_anglicism, english_word, probability, etymology))

        except Exception as e:
            print(f"‚ùå Gre≈°ka pri obradi '{lemma}': {e}")
            results.append((lemma, "Gre≈°ka", "N/A", "N/A", "Gre≈°ka u obradi"))

        time.sleep(0.5)  # Pauza za optimizaciju API zahteva

    # ‚úÖ 9. Snimi rezultate odmah u CSV
    df_results = pd.DataFrame(results, columns=["Lemma", "IsAnglicism", "EnglishWord", "Probability", "Etymology"])
    df_results.to_csv(output_file, mode='a', header=False, index=False, encoding="utf-8")
    print(f"‚úÖ {len(results)} novih reƒçi saƒçuvano u {output_file}!")

# ‚úÖ 10. Pokreni analizu u batch-ovima
for i in range(0, len(new_lemmas), batch_size):
    batch = new_lemmas[i:i + batch_size]
    analyze_lemmas_batch(batch)
    print(f"‚úÖ Obradili smo batch {i + 1}-{i + batch_size}, rezultati su saƒçuvani!")

print("‚úÖ Analiza zavr≈°ena! Rezultati su u 'anglicisms_analysis.csv'")

